"""
    3xn 타일링(dp)

    가로 길이가 2이고 세로의 길이가 1인 직사각형 모양의 타일
    세로의 길이가 3이고 가로의 길이가 n인 바닥을 가득 채우려고 합니다.

    1 <= n <= 5_000

    1_000_000_007으로 나눈 나머지를 return

    사고과정.

    가로 1 만큼을 채우는 경우는 수 0가지
    가로 2 만큼을 채우는 경우의 수 3 가지
    가로 3 만큼을 채우는 경우는 수 0가지
    가로 4 만큼을 채우는 경우의 수 11 => 3*3 + 2*1 가지
    가로 5 만큼을 채우는 경우는 수 0가지
    가로 6 만큼을 채우는 경우는 수 39 => 3*11 + 2*3 + 2*1 가지
    가로 7 만큼을 채우는 경우는 수 0가지
    가로 8 만큼을 채우는 경우는 수    => 3*33 + 2*11 + 2*3 + 2*1 가지
    .
    .
    .
    상향식 dp문제 지만 다음 테이블을 채우는 방법을 찾아내는 것이 쉽지가 않음.

"""

# table = [0] * 5_001
#
#
# def solution(n):
#     table[0] = 1
#     table[2] = 3
#     table[4] = 11
#
#     for i in range(5, n + 1):
#         if i % 2 == 1:
#             continue
#         else:
#             v = 0
#             for j in range(i-2, -1, -2):
#                 if i-2 == j:
#                     v += 3 * table[j]
#                 else:
#                     v += 2 * table[j]
#
#             table[i] = v % 1_000_000_007
#     print(table)
#     answer = table[n] % 1_000_000_007
#     return answer
#
#
# if __name__ == '__main__':
#     print(solution(8))
