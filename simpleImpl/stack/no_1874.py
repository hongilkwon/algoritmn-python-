"""
    스택 수열

    1부터 n까지의 수를 스택에 넣었다가 뽑아 늘어놓음 으로써, 하나의 수열을 만들 수 있다.

    1이상 n이하의 정수가 하나씩 순서대로 주어진다. 물론 같은 정수가 두 번 나오는 일은 없다.
    n (1 ≤ n ≤ 100_000)

     사고과정

     즉, 별도의 명령어가 없었다면,
     | 8 |  <<<<<< 1, 2, 3, 4, 5, 6, 7, 8  push push push...
     | 7 |
     | 6 |
     | 5 |
     | 4 |
     | 3 |
     | 2 |
     | 1 |
     | - |  >>>>> [8, 7, 6, 5, 4, 3, 2, 1] pop pop pop....

     "오름 차순" 숫자 입력 + "어떤 스택의 명령어" ->  변경된 스택
     | ? |  <<<<<< 1, 2, 3, 4, 5, 6, 7, 8
     | ? |
     | ? |
     | ? |
     | ? |
     | ? |
     | ? |
     | ? |
     | - |  >>>>> [4, 3, 6, 8, 7, 5, 2, 1]

     4이 가장 앞에 있다는 것 은 1,2,3,4 들어가서 4가 나왔다!  [1, 2, 3]    ++++-
     3이 가장 앞에 있다는 것 은 1,2,3에서 3이 나왔다!       [1, 2]        ++++--
     6이 가장 앞에 있다는 것 은 5,6이 들어갔다가 6이 나왔다!  [1, 2, 5]     ++++--++-
     8이 가장 앞에 있다는 것 은 7,8이 들어갔다가 8이 나왔다!  [1, 2, 5, 7]  ++++--++-++-
     7이 가장 앞에 있다는 것 은 7이 나왔다!                [1, 2, 5]    ++++--++-++-
     5이 가장 앞에 있다는 것 은 5이 나왔다!               [1, 2]        ++++--++-++--
     2이 가장 앞에 있다는 것 은 5이 나왔다!               [1]           ++++--++-++---
     1이 가장 앞에 있다는 것 은 5이 나왔다!               []            ++++--++-++----

     배울점.

     1. 스택의 원리를 이해
        - 스택에 들어 갔다 나오면 순서가 거꾸로 됨
        - 빨리 나오면 수열에서 앞에 있는 원소이다.
        - 나중에 나올수록 수열에서 뒤에 있는 원소이다.

     2. python 내장모듈에 stack, queue 가 없다. 그래서 deque로 대체한다.
     3. exit(0)  정상적인 프로그램 강제종료

"""

# import sys
# from collections import deque
#
# input = sys.stdin.readline
#
# n = int(input())
#
# arr = [0] * n
# for i in range(n):
#     arr[i] = int(input())
#
# if __name__ == '__main__':
#
#     ascending_num = 1
#     stack_operator = list()
#     s = deque()
#
#     answer = []
#     for i in range(len(arr)):
#
#         # 오름차순으로 들어왔다면 스택에 들어가야 역순이됨.
#         while ascending_num <= arr[i]:
#             s.append(ascending_num)
#             answer.append("+")
#             ascending_num += 1
#
#         #  스택(s)의 arr[i]과 같다면, 나와야 된다!
#         if s[-1] == arr[i]:
#             s.pop()
#             answer.append("-")
#         else:
#             print("NO")
#             exit(0)
#         # print(arr[i], s)
#
#     for e in answer:
#         print(e)
